=begin

    Moves you from anywhere in the world (via go2) to your thiefy home in Ain Ghazal,
    OR from inside your home in Ain Ghazal to anywhere in the world (or just the docks, if you don't want to go further)

    REQUIRES IN YAML:
      First, the long name of your home:
        home_description: towering blackwood edifice
      Second, the adjective and noun pair for your home (blue door, marble manor, etc, how you interact with it)
        home_interact: blackwood edifice
=end
custom_require.call(%w[common])

class Home
  
  def initialize
    arg_definitions = [
      [
        { name: 'enter', regex: /enter/i, description: 'Go to your home and enter' }
      ],

      [
        { name: 'leave', regex: /leave/i, description: 'Go from your home to the docks' },
        { name: 'destination', regex: /\w+/i, optional: true, description: 'Where to go after leaving your home (any go2 destination)' }
      ]
    ]

    settings = get_settings
    description = settings.home_description #description as seen in the room
    interact = settings.home_interact #adjective and noun

    args = parse_args(arg_definitions)
    
    if args.destination
      @destination = args.destination
    end
    
    if args.enter
      enter(description, interact)
    elsif args.leave
      leave(interact)
    end
  end


  def enter(description, interact)
    DRC.wait_for_script_to_complete('go2', ['11027'])
    if (Room.current.id == 11027) #if go2 succeeds
      move 'north'
      move 'northeast'
      waitrt?
      move 'climb slope'
      move 'climb cliff'
      move 'climb escarpment'
      move 'climb precipice'
      move 'go gate'
      move 'west'
      move 'go path'
      move 'go door'
      move 'west'
      move 'south'
      move 'south'
      move 'go trap door'
      move 'south'
      move 'southeast'
      move 'south'
      move 'southwest'
      move 'northwest'
      unless DRRoom.room_objs.include?(description)
        move 'west' until DRRoom.room_objs.include?(description)
      end
      move "move #{interact}"
      DRC.message("Welcome Home, #{checkname}")
      exit
    else #go2 fails
      DRC.message('Something went wrong with go2')
      exit
    end
  end

  def leave(interact)    
    move 'move door'
    DRC.bput("close #{interact}", '')
    DRC.bput("lock #{interact}", '')
    unless XMLData.room_exits.include?('southeast')
      move 'east' until XMLData.room_exits.include?('southeast')
    end
    move 'southeast'
    move 'northeast'
    move 'north'
    move 'northwest'
    move 'north'
    move 'go trap door'
    move 'north'
    move 'north'
    move 'east'
    move 'go door'
    move 'go path'
    move 'east'
    move 'go gate'
    move 'climb precipice'
    move 'climb escarpment'
    move 'climb cliff'
    move 'down'
    waitrt?
    move 'climb slope'
    move 'south'
    waitrt?
    if (Room.current.id == 11027)
      unless @destination.nil?
        DRC.wait_for_script_to_complete('go2', [@destination])
        exit
      end
    else
      DRC.message('Something went wrong')
      exit
    end
  end
end

Home.new
