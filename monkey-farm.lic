custom_require.call(%w[common common-crafting common-items])

class Monkey
    def initialize
        @rooms = [14649,14648,14647,14646,9787,9786,9785,9784,9778,9779,9780,9781,9782,9783]

        main_loop
    end

    def main_loop
        loop do
        DRCT.walk_to(14645)
        echo(Time.now)
        DRCI.stow_hands
        unless /at your empty hands/i =~ DRC.bput('glance', 'at your empty hands','in your')
            exit
        end
        if /You get/i =~ DRC.bput('get my slip', 'You get', 'What were you')
            DRC.bput('go port','The labyrinth guard glances')
            DRC.wait_for_script_to_complete('dusk-labyrinth')
            DRCI.stow_hands
            DRC.bput('stow feet', 'You pick', 'Stow what')
        else
            exit
        end
        unless /You get/i =~ DRC.bput('get my harness', 'You get','What were you referring')
            next
        end
        /monkey|tamarin|marmoset|paguur|zari/ =~ DRC.bput('look in my harness', "Inside the harness, a (.*) sits", "Never losing focus, a (.*)")
        monkey = Regexp.last_match(0)
        DRC.bput('wear my harness', 'You attach')
        DRC.bput("get #{monkey} from my harness", 'You carefully lift')
        
        
        find_child
        give_child(monkey)

        DRCT.walk_to(14647)
        fput('remove my harness')
        fput('put my harness in bucket')

        DRCT.walk_to(14645)
        end
    end

    def find_child
        @rooms.each { |x| 
            break if DRRoom.npcs.include?("child")
            DRCT.walk_to(x)
            }
        end
    end

    def give_child(monkey)
    case DRC.bput("give child", 'A mud-covered child ignores your offer.', 'The mud-covered child snatches the', 'GIVE it to me again', 'What is it you\'re trying')
    when 'The mud-covered child snatches the'
        DRCI.stow_hands
    when 'GIVE it to me again'
        DRC.bput("give child",'')
        DRCI.stow_hands
    when 'A mud-covered child ignores your offer.'
        DRCI.stow_hands
    when 'What is it you\'re trying'
        find_child
        give_child
    end
end

Monkey.new
