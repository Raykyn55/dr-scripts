custom_require.call(%w[common common-travel common-items common-money])

settings = get_settings
totalL,totalK,totalD = [0,0,0]
needed = []
DRCI.stow_hands

settings.herbs.each do |herb|
    next if DRCI.exists?(herb['name'])
    needed << herb['name']
    if herb['location'] == 'Riverhaven'
        totalL += herb['price']
    elsif herb['location'] == 'Shard'
        totalD += herb['price']
    elsif herb['location'] == 'Crossing'
        totalK += herb['price']
    end
end

haventrip = settings.herbs.select { |herb| herb['location'] == 'Riverhaven' && needed.include?(herb['name'])}
crossingtrip = settings.herbs.select { |herb| herb['location'] == 'Crossing' && needed.include?(herb['name']) }
shardtrip = settings.herbs.select { |herb| herb['location'] == 'Shard' && needed.include?(herb['name']) }

unless haventrip.empty?
    echo('going to haven')
    DRCM.ensure_copper_on_hand(totalL*2, settings, 'Riverhaven')
    haventrip.each do |herb|
        2.times do DRCT.buy_item(herb['room'], herb['name']) end
        DRC.bput("combine #{herb['name'].split.last}", 'You combine', 'Those items cannot', 'too dense to be combined')
        DRCI.stow_hands
    end
end

unless crossingtrip.empty?
    echo('going to crossing')
    DRCM.ensure_copper_on_hand(totalK*2, settings, 'Crossing')
    crossingtrip.each do |herb|
        2.times do DRCT.buy_item(herb['room'], herb['name']) end
        DRC.bput("combine #{herb['name'].split.last}", 'You combine', 'Those items cannot', 'too dense to be combined')
        DRCI.stow_hands
    end
end

unless shardtrip.empty?
    echo('going to shard')
    DRCM.ensure_copper_on_hand(totalD*2, settings, 'Shard')
    shardtrip.each do |herb|
        2.times do DRCT.buy_item(herb['room'], herb['name']) end
        DRC.bput("combine #{herb['name'].split.last}", 'You combine', 'Those items cannot', 'too dense to be combined')
        DRCI.stow_hands
    end
end
